# encoding: utf-8
# 2021 R1
SetScriptVersion(Version="21.1.216")
system1 = GetSystem(Name="TS 2")
turboMeshComponent1 = system1.GetComponent(Name="Turbo Mesh")
turboMeshComponent1.Clean()
system2 = GetSystem(Name="TS 3")
turboMeshComponent2 = system2.GetComponent(Name="Turbo Mesh")
turboMeshComponent2.Clean()
system3 = GetSystem(Name="TS")
turboMeshComponent3 = system3.GetComponent(Name="Turbo Mesh")
turboMeshComponent3.Clean()
turboMesh1 = system1.GetContainer(ComponentName="Turbo Mesh")
turboMesh1.Edit()
turboMesh1.Exit()
system4 = GetSystem(Name="CFX")
setupComponent1 = system4.GetComponent(Name="Setup")
setupComponent1.UpdateUpstreamComponents()
solutionComponent1 = system4.GetComponent(Name="Solution")
solutionComponent1.Clean()
setup1 = system4.GetContainer(ComponentName="Setup")
setup1.Edit()
setup1.Exit()
setup1.Edit()
setup1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0489904, 0.297458, 0.00840934
    Scale = 12.3627
    Pan = 0, 0
    Rotation Quaternion = -0.0155249, 0.0306733, -0.000911251, 0.999451
    
  END

END

VIEW:View 1
  Light Angle = 50, 110
END

> update
>setViewportView cmd=set, view=/VIEW:View 3, viewport=1""")
setup1.SendCommand(Command=">setViewportView cmd=set, view=/VIEW:View 1, viewport=1")
solution1 = system4.GetContainer(ComponentName="Solution")
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 8
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_001.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 8
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
resultsComponent1 = system4.GetComponent(Name="Results")
resultsComponent1.Clean()
solutionComponent1.Clean()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
results1 = system4.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command=">report save, format=preview")
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_001.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Maximized Viewport = -1
  Synchronize Camera = false
  Synchronize Visibility = false
  View Length Units = m
  Viewer Camera Z = -5
  Viewer Eye Point = Normal
  Viewer Eye Separation = 5
  Viewport 1 View = Blade to Blade View
  Viewport 2 View = View 2
  Viewport 3 View = View 3
  Viewport 4 View = View 4
  Viewport Layout = No Split
  X Split = 0.5
  Y Split = 0.5
END""")
results1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
>report save, format=preview""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""VIEW:Blade to Blade View
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0463768, 0.319614, 0.499946
    Scale = 2.10365
    Pan = 0, 0
    Rotation Quaternion = 0, 0, -0.707107, 0.707107
    
  END

END

> update

VIEWPORT MANAGER:
  Maximized Viewport = -1
  Synchronize Camera = false
  Synchronize Visibility = false
  View Length Units = m
  Viewer Camera Z = -5
  Viewer Eye Point = Normal
  Viewer Eye Separation = 5
  Viewport 1 View = Blade to Blade View
  Viewport 2 View = View 2
  Viewport 3 View = View 3
  Viewport 4 View = View 4
  Viewport Layout = No Split
  X Split = 0.5
  Y Split = 0.5
END""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""# CCL from Turbo Chart Macro begins (execute)
> delete Inlet to Outlet Surface, Inlet to Outlet Line, Inlet to Outlet Chart

INTERNAL TURBO LINE:Inlet to Outlet Line
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Inlet to Outlet
 Streamwise Location = 0.5
 Span = 0.5
 Span Points = 10
 Streamwise Points = 10
 Theta Points = 10
 Point Distribution Method = Equal Distance
 Include Boundary Points = On
 Reduction or Max Number = Max Number
 Reduction Factor = 1.0
 Maximum Number of Items = 10
 Turbo Line Mode= Streamwise Location
 Point Type = AR
 Point 1 = 0 [m], 0 [m]
 Point 2 = 1 [m], 0 [m]
 Position 1 = 0.5
 Position 2 = 0.5
 Colour Mode = Variable
 Colour Variable = Pressure
Circumferential Average Mode = Area
Maximum Number of Sampling Points = 20

 Line Width = 2
END
INTERNAL TURBO LINE:Inlet to Outlet Line
 Colour Variable = Streamwise Location
Circumferential Average Mode = None
Maximum Number of Sampling Points = 20

END
CHART:Inlet to Outlet Chart
 Chart Type = XY
 Chart Title = Inlet to Outlet Chart
 Chart X Axis Label = Streamwise Location
 Chart Y Axis Label = (Area Average)
 CHART SERIES: Series 1
  Chart Line Custom Data Selection = True
  Chart X Variable = Streamwise Location
  Chart Y Variable = Pressure ACA on Inlet to Outlet Line
  Series Name = Inlet to Outlet Chart Line
  Location = Inlet to Outlet Line
  CHART LINE: Chart Line 1
   Line Name = Inlet to Outlet Chart Line
   Chart Line Style = None
   Auto Chart Line Colour = false
   Auto Chart Symbol Colour = false
   Chart Line Colour = 0, 0, 1
   Chart Symbol Colour = 0, 0, 1
   Chart Symbol Style = Ellipse
  END
 END
END
# CCL from Turbo Chart Macro ends (execute)""")
results1.SendCommand(Command=">hide /INTERNAL TURBO LINE:Inlet to Outlet Line, view=/VIEW:Turbo Regions View")
results1.SendCommand(Command="""# CCL from Turbo Chart Macro begins (execute)
> delete Hub to Shroud Surface, Hub to Shroud Line, Hub to Shroud Chart

INTERNAL TURBO LINE:Hub to Shroud Line
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Hub to Shroud
 Streamwise Location = 0.5
 Span = 0.5
 Span Points = 10
 Streamwise Points = 10
 Theta Points = 10
 Point Distribution Method = Equal Distance
 Include Boundary Points = On
 Reduction or Max Number = Max Number
 Reduction Factor = 1.0
 Maximum Number of Items = 10
 Turbo Line Mode= Streamwise Location
 Point Type = AR
 Point 1 = 0 [m], 0 [m]
 Point 2 = 1 [m], 0 [m]
 Position 1 = 0.5
 Position 2 = 0.5
 Colour Mode = Variable
 Colour Variable = Span Normalized
Circumferential Average Mode = None
Maximum Number of Sampling Points = 20

 Line Width = 2
END
INTERNAL TURBO LINE:Hub to Shroud Line
 Colour Variable = Pressure
Circumferential Average Mode = Area
Maximum Number of Sampling Points = 20

END
CHART:Hub to Shroud Chart
 Chart Type = XY
 Chart Title = Hub to Shroud Chart
 Chart X Axis Label = (Area Average)
 Chart Y Axis Label = Span Normalized
 CHART SERIES: Series 1
  Chart Line Custom Data Selection = True
  Chart X Variable = Pressure ACA on Hub to Shroud Line
  Chart Y Variable = Span Normalized
  Series Name = Hub to Shroud Chart Line
  Location = Hub to Shroud Line
  CHART LINE: Chart Line 1
   Line Name = Hub to Shroud Chart Line
   Chart Line Style = Solid
   Auto Chart Line Colour = false
   Auto Chart Symbol Colour = false
   Chart Line Colour = 0, 0, 1
   Chart Symbol Colour = 0, 0, 1
   Chart Symbol Style = Ellipse
  END
 END
END
# CCL from Turbo Chart Macro ends (execute)
TURBO PLOTS: Hub to Shroud Chart State
  Turbo HS Chart Plot Type = Single Line
  Turbo HS Chart Display Option = Separate Lines
  Turbo HS Chart Compare Axis Option = X
END""")
results1.SendCommand(Command=">hide /INTERNAL TURBO LINE:Inlet to Outlet Line,/INTERNAL TURBO LINE:Hub to Shroud Line, view=/VIEW:Turbo Regions View")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.8
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.Exit()
solution1.Exit()
setup1.Exit()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.UpdateUpstreamComponents()
setup1.Edit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.8
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.7
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Maximized Viewport = -1
  Synchronize Camera = false
  Synchronize Visibility = false
  View Length Units = m
  Viewer Camera Z = -5
  Viewer Eye Point = Normal
  Viewer Eye Separation = 5
  Viewport 1 View = Blade to Blade View
  Viewport 2 View = View 2
  Viewport 3 View = View 3
  Viewport 4 View = View 4
  Viewport Layout = No Split
  X Split = 0.5
  Y Split = 0.5
END""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Regions View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Regions View, viewport=1""")
results1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPBGMESH:Component 1, /COMPBGMESH:Component 2, /COMPBGMESH:Component 3, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPBGMESH:Component 1, /COMPBGMESH:Component 2, /COMPBGMESH:Component 3, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
solution1.Exit()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.Update(AllDependencies=True)
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.Exit()
solution1.Exit()
setup1.Exit()
solutionComponent1.Clean()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.Update(AllDependencies=True)
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_001.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
solution1.Exit()
results1.Exit()
setupComponent1.UpdateUpstreamComponents()
solutionComponent1.Clean()
resultsComponent1.Clean()
resultsComponent1.Reset()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.UpdateUpstreamComponents()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.UpdateUpstreamComponents()
setup1.Edit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="> turbo init")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Regions View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Regions View, viewport=1""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
VIEW:Blade to Blade View
 Angular Coord Shift = 0.0 [degree]

END
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number in Stn Frame
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
> centerview 1
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_001.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Pressure
Colour Variable Boundary Values = Hybrid
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
solution1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_002.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
results1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
>report generatemode=APPEND, loadtemplate=Axial Compressor Report""")
results1.SendCommand(Command=">report save, format=preview")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Meridional Macro begins (initialize)
VIEW:Meridional View
 Coord Transform = 2D Meridional
 Is A Figure = false
 Hide Difference Case = true
END
>show /INTERNAL LEGEND:Meridional Legend,/INTERNAL TURBO SURFACE:Meridional Surface, view=/VIEW:Meridional View
# CCL from Meridional Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Meridional View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Meridional View, viewport=1""")
results1.SendCommand(Command="""# CCL from Meridional Macro begins (execute)
INTERNAL TURBO SURFACE:Meridional Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Theta
 Surface Type = Sample
 Span Points = 15
 Streamwise Points = 50
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Circumferential Average Mode = Area
Maximum Number of Sampling Points = 20

Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Global

 Colour Variable = Static Entropy
 Draw Faces = On
 Render Edge Angle = 0
 Draw Lines = On
END
LEGEND:Meridional Legend
 Legend Title Mode = User Specified
 Legend Title = Static Entropy
 Legend X Justification = Left
 Legend Plot = Meridional Surface
END
>hide /INTERNAL SURFACE GROUP:Meridional Blade Wireframe, view=/VIEW:Meridional View
>show /INTERNAL TURBO SURFACE:Meridional Surface,/LEGEND:Meridional Legend, view=/VIEW:Meridional View
# CCL from Meridional Macro ends (execute)


> centerview 1""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.2
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Pressure
Colour Variable Boundary Values = Hybrid
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Pressure
Colour Variable Boundary Values = Hybrid
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Global

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.2
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.3
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.4
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.4
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.Exit()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.Clean()
setupComponent1.UpdateUpstreamComponents()
solutionComponent1.Clean()
solution1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Density
Colour Variable Boundary Values = Hybrid
Max = 0.0 [kg m^-3]
Min = 0.0 [kg m^-3]
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:R1
  Number of Copies = 2
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:IGV
  Number of Copies = 3
END
END
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:S1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command=">report save, format=preview")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Meridional Macro begins (initialize)
VIEW:Meridional View
 Coord Transform = 2D Meridional
 Is A Figure = false
 Hide Difference Case = true
END
>show /INTERNAL LEGEND:Meridional Legend,/INTERNAL TURBO SURFACE:Meridional Surface, view=/VIEW:Meridional View
# CCL from Meridional Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Meridional View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Meridional View, viewport=1""")
results1.SendCommand(Command="""# CCL from Meridional Macro begins (execute)
INTERNAL TURBO SURFACE:Meridional Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Theta
 Surface Type = Sample
 Span Points = 15
 Streamwise Points = 50
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Circumferential Average Mode = Area
Maximum Number of Sampling Points = 20

Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Global

 Colour Variable = Static Entropy
 Draw Faces = On
 Render Edge Angle = 0
 Draw Lines = On
END
LEGEND:Meridional Legend
 Legend Title Mode = User Specified
 Legend Title = Static Entropy
 Legend X Justification = Left
 Legend Plot = Meridional Surface
END
>hide /INTERNAL SURFACE GROUP:Meridional Blade Wireframe, view=/VIEW:Meridional View
>show /INTERNAL TURBO SURFACE:Meridional Surface,/LEGEND:Meridional Legend, view=/VIEW:Meridional View
# CCL from Meridional Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:S1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""# CCL from Meridional Macro begins (execute)
INTERNAL TURBO SURFACE:Meridional Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Theta
 Surface Type = Sample
 Span Points = 15
 Streamwise Points = 50
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Circumferential Average Mode = Area
Maximum Number of Sampling Points = 20

Colour Variable = Static Entropy
Colour Variable Boundary Values = Hybrid
Max = 0.0 [J kg^-1 K^-1]
Min = 0.0 [J kg^-1 K^-1]
Range = Local

 Colour Variable = Static Entropy
 Draw Faces = On
 Render Edge Angle = 0
 Draw Lines = On
END
LEGEND:Meridional Legend
 Legend Title Mode = User Specified
 Legend Title = Static Entropy
 Legend X Justification = Left
 Legend Plot = Meridional Surface
END
>hide /INTERNAL SURFACE GROUP:Meridional Blade Wireframe, view=/VIEW:Meridional View
>show /INTERNAL TURBO SURFACE:Meridional Surface,/LEGEND:Meridional Legend, view=/VIEW:Meridional View
# CCL from Meridional Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:S1
  Number of Copies = 4
END
END
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.9
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""DATA READER:
CASE:Case CFX
DOMAIN:S1
  Number of Copies = 4
END
END
END""")
results1.Exit()
turboMeshComponent1.Clean()
turboMeshComponent2.Clean()
turboMeshComponent3.UpdateUpstreamComponents()
turboMeshComponent3.Clean()
solutionComponent1.Update(AllDependencies=True)
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\xisto\OneDrive - Chalmers\MyFiles\Chalmers\Teaching\Aerospace Propulsion\Design Tasks\solution\DT3\cfd\cfdrun_files\dp0\CFX\CFX\CFX_002.res
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 10
        Start Method = Intel MPI Local Parallel
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
solution1.Exit()
Save(Overwrite=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update

VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEW:Turbo Initialisation View
 Object Visibility List = /WIREFRAME:Wireframe, /COMPHIGHLIGHT:Component 1, /COMPHIGHLIGHT:Component 2, /COMPHIGHLIGHT:Component 3
 Is A Figure = false
END""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Turbo Initialisation View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Turbo Initialisation View, viewport=1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = false
END""")
results1.SendCommand(Command="""DEFAULT INSTANCE TRANSFORM:Default Transform
 Instancing Info From Domain = On
END""")
results1.SendCommand(Command="""# CCL from Turbo 3D Views Macro begins (initialize)
VIEW:Turbo Regions View
 Coord Transform = Cartesian
 Is A Figure = false
END
>show /WIREFRAME:Wireframe, view=/VIEW:Turbo Regions View
# CCL from Turbo 3D Views Macro ends (initialize)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (initialize)

VIEW:Blade to Blade View
 Coord Transform = 2D Blade-to-blade
 Is A Figure = false
END

>show /INTERNAL LEGEND:Blade to Blade Legend,/INTERNAL TURBO SURFACE:Blade to Blade Surface,/INTERNAL VECTOR:Blade to Blade Vector,/INTERNAL CONTOUR:Blade to Blade Contour,/INTERNAL STREAMLINE:Blade to Blade Stream, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (initialize)""")
results1.SendCommand(Command="""# Setting Single View: /VIEW:Blade to Blade View
VIEWPORT MANAGER:
  Viewport Layout = No Split
  Maximized Viewport = -1
END
>setViewportView cmd=set, view=/VIEW:Blade to Blade View, viewport=1""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.5
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.2
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command="""# CCL from Blade to Blade Macro begins (execute)
INTERNAL TURBO SURFACE:Blade to Blade Surface
 Turbo Domain List = /DOMAIN GROUP:All Domains
 Option = Constant Span
 Surface Type = Slice
 Span = 0.1
 Turbo View Plot Type = Colour
 Colour Mode = Variable
Colour Variable = Mach Number
Colour Variable Boundary Values = Hybrid
Max = 0.0
Min = 0.0
Range = Local

 Circumferential Average Mode = None
 Draw Faces = On
 Draw Lines = Off
END
LEGEND:Blade to Blade Legend
 Legend Title Mode = Variable
 Legend X Justification = Left
 Legend Plot = Blade to Blade Surface
END
>show /INTERNAL TURBO SURFACE:Blade to Blade Surface,/LEGEND:Blade to Blade Legend, view=/VIEW:Blade to Blade View
# CCL from Blade to Blade Macro ends (execute)""")
results1.SendCommand(Command=">report save, format=preview")
results1.Exit()
Save(Overwrite=True)
